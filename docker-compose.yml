services:
  # Service MySQL
  mysql:
    image: mysql:latest
    container_name: mysql_magasin
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: "%"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - magasin_network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-uroot",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service PhpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_magasin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - magasin_network

  # Service Application (Node.js)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
    container_name: node_app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_DIALECT=${DB_DIALECT}
      - NODE_ENV=${NODE_ENV}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - magasin_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local

networks:
  magasin_network:
    driver: bridge
